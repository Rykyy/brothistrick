-- Variable
local TweenService = game:GetService("TweenService")
local plr = game:GetService("Players").LocalPlayer
local reps = game:GetService("ReplicatedStorage")
local gameName = "⚔️MeloBlox"
local moblist;
local tplist;
local tpbeat;
local beat;
local a1beat;
local a2beat;
local a3beat;
local aunk;
local aunp;
local charIDR;
local charID

-- Global
getgenv().area = nil
getgenv().areatp = "SunnyForest"
getgenv().itemlist = "All Tier"
getgenv().rarity = "All Rarity"
getgenv().modeloot = "Bring Item"
getgenv().itemsell = "All Tier"
getgenv().raritysell = 1
getgenv().stat = "Strength"
getgenv().mobname = "Blob"
getgenv().ws = 19
getgenv().jp = 50
getgenv().distance = 0
getgenv().mode = "Nothing"
getgenv().toggleui = true


-- Table
local areaTable = {"Tutorial", "SunnyForest", "DenseForest", "ToadstoolGorge", "BullfrogMarsh", "AridDesert"}
local mobTable = {"Select Mob!"}
local itemTable = {"All Tier" ,"Copper", "Egg", "T1", "T2", "T3", "T4", "T5"}
local rarityTable = {"All Rarity", "Common", "Uncommon", "Rare", "Epic", "Legendary", "Mythic"}
local modelootTable = {"Bring Item", "Tp To Item"}
local statsTable = {"Strength", "Dexterity", "Vitality", "Intelligence"}
local itemsellTable = {"All Tier", "T1", "T2", "T3", "T4", "T5"}
local raritysellTable = {"Common", "Uncommon", "Rare", "Epic", "Legendary", "Mythic"}
local areatpTable = {"Tutorial","SunnyForest", "DenseForest", "ToadstoolGorge", "BullfrogMarsh", "AridDesert"}

-- Function

local function nameGui()
    local name = nil
    for i,v in pairs(game.CoreGui:GetDescendants()) do
        if v.Name == "UITabs" and v.Parent.Name == "Main" then
            name = v.Parent.Parent
        end
    end
    return name
end

local function backtosafeTp()
    if getgenv().area  ~= nil then
        local dist = math.huge
        for i,v in pairs(game.Workspace.RegionsAssets[getgenv().area].PlayerSpawner:GetChildren()) do
            if v.ClassName == "SpawnLocation" then
                local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                if magnitude < dist then
                    dist = magnitude
                    plr.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,3,0)
                end 
            end
        end
    end
end

local function nearestItem()
    local dist = 100
    local dekat = nil   
    for i,v in pairs(game:GetService("Workspace").RunTime.GroundLoot:GetChildren()) do
        if getgenv().itemlist == "All Tier" then
            if getgenv().rarity == "All Rarity" then
                local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                if magnitude < dist then
                    dist = magnitude
                    dekat = v
                end
            elseif getgenv().rarity ~= "All Rarity" then
                if v:GetAttribute("Rarity") == getgenv().rarity then
                    local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                    if magnitude < dist then        
                        dist = magnitude
                        dekat = v
                    end
                end
            end
        elseif getgenv().itemlist ~= "All Tier" and getgenv().itemlist ~= "Copper" and getgenv().itemlist ~= "Egg" then
            if string.find(v.Name, getgenv().itemlist) or string.find(v.Name, "Gold") or string.find(v.Name, "Egg") then
                if getgenv().rarity == "All Rarity" then
                    local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                    if magnitude < dist then        
                        dist = magnitude
                        dekat = v
                    end
                elseif getgenv().rarity ~= "All Rarity" then
                    if v:GetAttribute("Rarity") == getgenv().rarity then
                        local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                        if magnitude < dist then        
                            dist = magnitude
                            dekat = v
                        end
                    end
                end
            end
        elseif getgenv().itemlist == "Copper" and getgenv().itemlist ~= "Egg" then
            if string.find(v.Name, "Gold") then
                local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                if magnitude < dist then        
                    dist = magnitude
                    dekat = v
                end
            end
        elseif getgenv().itemlist == "Egg" and getgenv().itemlist ~= "Copper" then
            if string.find(v.Name, "Egg") then
                local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                if magnitude < dist then        
                    dist = magnitude
                    dekat = v
                end
            end
        end
    end
    return dekat
end

local function shop()
    local x = {}
    for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
        if type(v) == "table" and v.maxPlayers > v.playing and v.id ~= game.JobId then
           x[#x + 1] = v.id
        end
    end
    if #x > 0 then
       game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
       wait(5)
       game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
	else
        print("....")
	end
end

local function pesan(title, text, time)
    local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
    local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

    Notification:Notify(
        {Title = title, Description = text},
        {OutlineColor = Color3.fromRGB(255, 84, 84),Time = time, Type = "image"},
        {Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84)}
    )
end

game:GetService("RunService").Heartbeat:Connect(function()
    charIDR = require(plr.PlayerScripts.FrameworkClient.Controllers.GameLogic.GameLoopController)
    charID = charIDR:GetCharInfo().ID
end)

repeat wait() until game:IsLoaded() 
    plr.Idled:connect(function()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Rykyy/brothistrick/main/brorqdassdax"))()

local window = library:CreateTab(gameName)
local misc = library:CreateTab("Misc")

local autofarm = window:CreateSection("Auto Farm & Auto Loot")
local st = window:CreateSection("Auto Stats & Auto Sells & Teleports")
local sc = misc:CreateSection("Server & Character")
local credits = misc:CreateSection("Credits")


autofarm:CreateLabel("~~Mob Settings")

autofarm:CreateDropdown("Area List", areaTable, 1, "Select Area!", function(selected)
    getgenv().area = selected

    for _,v2 in pairs(mobTable) do table.remove(mobTable, _) end 
    for _,v2 in pairs(mobTable) do table.remove(mobTable, _) end

    for _,v in pairs(game:GetService("Workspace").RunTime[selected].Creatures:GetChildren()) do
        if v:FindFirstChild("HumanoidRootPart") then
            insert = true
            for _,v2 in pairs(mobTable) do if v2 == tostring(v.HumanoidRootPart.HealthGUI.HealthBar.CreatureName.Text) then insert = false end end
            if insert then table.insert(mobTable, tostring(v.HumanoidRootPart.HealthGUI.HealthBar.CreatureName.Text)) end
        end 
    end

    moblist:Refresh(mobTable, 1, "Select Mob!")
    pesan("Mob Settings Notification!", "Make sure the area you choose is open otherwise you will be banned", 2.5)
end)

moblist = autofarm:CreateDropdown("Mob List", mobTable, 1, mobTable[1], function(selected)
    getgenv().mobname = selected
end)


autofarm:CreateSlider("Distance", -15, 15, getgenv().distance, 0.999, function(s)
    getgenv().distance = s

    if getgenv().distance >= 0  then
        getgenv().mode = CFrame.Angles(math.rad(-   90),0,0)
    elseif getgenv().distance <= -1 then
        getgenv().mode = CFrame.Angles(math.rad(90),0,0)
    end
end)

autofarm:CreateLabel("~~Attack Action Settings")

autofarm:CreateToggle("Slot 1", function(bool)
    a1 = bool

    a1beat =  game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().enabled == true and a1 == true then                                              
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.InputReceived:FireServer("Action1","Down")
        elseif getgenv().enabled == false and a1 == false then
            a1beat:Disconnect()
        end
    end)
end)

autofarm:CreateToggle("Slot 2", function(bool)
    a2 = bool

    a2beat =  game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().enabled == true and a2 == true then
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.InputReceived:FireServer("Action2","Down")
        elseif getgenv().enabled == false and a2 == false then
            a2beat:Disconnect()    
        end
    end)
end)


autofarm:CreateToggle("Slot 3", function(bool)
    a3 = bool

    a3beat = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().enabled == true and a3 == true then
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.InputReceived:FireServer("Action3","Down")
        elseif getgenv().enabled == false and a3 == false then
            a3beat:Disconnect()
        end
    end)
end)


autofarm:CreateButton("Get All Weapon Skill", function()
    for i,v in pairs(plr.Character:GetChildren()) do
        if string.find(v.Name, "Axe") then
            local args = {
                [1] = "Action1",
                [2] = "BasicAttack"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action2",
                [2] = "FireSlash"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action3",
                [2] = "GroundSlam"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
        elseif string.find(v.Name, "Sword") and not string.find(v.Name, "Shield")  then
            local args = {
                [1] = "Action1",
                [2] = "BasicAttack"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action2",
                [2] = "SwiftStrike"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action3",
                [2] = "Whirlwind"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
        elseif string.find(v.Name, "Shield") then
            local args = {
                [1] = "Action1",
                [2] = "BasicAttack"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action2",
                [2] = "BombShield"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action3",
                [2] = "HardSkin"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
        end
    end
end)

autofarm:CreateLabel("~~Farm")

autofarm:CreateToggle("Enabled", function(bool)
    getgenv().enabled = bool

    if getgenv().enabled == true then
        if charID ~= nil and plr.PlayerGui.DeathScreen.Enabled == true then
            game:GetService("ReplicatedStorage").Knit.Services.CharacterHealthService.RF.Revive:InvokeServer(charID)
        end
        if not plr.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
            aunk = Instance.new("BodyVelocity", plr.Character.HumanoidRootPart)
            aunk.Velocity = Vector3.new(0, 0, 0)
            aunk.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        end
    else
        aunk:Destroy()
        backtosafeTp()
    end

    aunp = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().enabled == true then
            for i, v in pairs(plr.Character:GetDescendants()) do
                if v:IsA("BasePart") and v.CanCollide == true then
                    v.CanCollide = false
                    plr.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
                end
            end
        elseif getgenv().enabled == false then
            aunp:Disconnect()
        end
    end)

    bruh = plr.PlayerGui.DeathScreen.Changed:Connect(function(v)
        if getgenv().enabled == true and charID ~= nil and plr.PlayerGui.DeathScreen.Enabled == true then
            game:GetService("ReplicatedStorage").Knit.Services.CharacterHealthService.RF.Revive:InvokeServer(charID)
        elseif getgenv().enabled == false then
            bruh:Disconnect()
        end
    end)

    beat = game:GetService("RunService").Heartbeat:Connect(function()
        pcall(function()
            if getgenv().enabled == true then
                if getgenv().area ~= nil then
                    if plr.PlayerGui.DeathScreen.Enabled == true and charID ~= nil then
                        print("Revive!!!!!!!")
                    elseif plr.PlayerGui.DeathScreen.Enabled == false and charID ~= nil then
                        for i,v in next, game:GetService("Workspace").RunTime[getgenv().area].Creatures:GetChildren() do
                            if v:FindFirstChild("HumanoidRootPart") then
                                if v.HumanoidRootPart.HealthGUI.HealthBar.CreatureName.Text == getgenv().mobname and getgenv().enabled == true then
                                    repeat
                                        if v:FindFirstChild("HumanoidRootPart") then
                                            plr.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,getgenv().distance,0) * getgenv().mode
                                        end
                                    wait()
                                    until getgenv().enabled == false or not v:FindFirstChild("HumanoidRootPart")
                                end
                            end
                        end
                    end
                end
            else
                beat:Disconnect()
            end
        end)
    end)
end)

autofarm:CreateLabel("~~Loot Settings")

autofarm:CreateDropdown("Items list", itemTable, 1, itemTable[1], function(selected)
    getgenv().modeloot = selected
end)

autofarm:CreateDropdown("Rarity list", rarityTable, 1, rarityTable[1], function(selected)
    getgenv().rarity = selected

    if selected == "Common" then
        getgenv().rarity = 1
    elseif selected == "Uncommon" then
        getgenv().rarity = 2
    elseif selected == "Rare" then
        getgenv().rarity = 3
    elseif selected == "Epic" then
        getgenv().rarity = 4
    elseif selected == "Legendary" then
        getgenv().rarity = 5
    elseif selected == "Mythic" then
        getgenv().rarity = 6
    end
end)

autofarm:CreateDropdown("Mode List", modelootTable, 1, modelootTable[1], function(selected)
    getgenv().modeloot = selected
end)


autofarm:CreateToggle("Loot", function(bool)
    getgenv().loot = bool
    local lootbeat;

    lootbeat = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().loot == true and nearestItem() ~= nil and plr.Character ~= nil then
            if getgenv().modeloot == "Bring Item" then
                nearestItem().CFrame = plr.Character.HumanoidRootPart.CFrame
                game:GetService("ReplicatedStorage").Knit.Services.GroundItemService.RF.PickUpItem:InvokeServer(nearestItem():GetAttribute("ItemID"))
            elseif getgenv().modeloot == "Tp To Item" then
                plr.Character.HumanoidRootPart.CFrame = nearestItem().CFrame
                game:GetService("ReplicatedStorage").Knit.Services.GroundItemService.RF.PickUpItem:InvokeServer(nearestItem():GetAttribute("ItemID"))
            end
        end
    end)
end)

st:CreateLabel("~~Auto Stats")

st:CreateDropdown("Stat List", statsTable, 1, statsTable[1], function(selected)
    getgenv().stat = selected
end)

st:CreateToggle("Enabled", function(bool)
    getgenv().enabled1 = bool

    breh1 = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().enabled1 == true then
            game:GetService("ReplicatedStorage").Knit.Services.PrimaryStatsService.RF.AttributeStatPoint:InvokeServer(getgenv().stat)
        elseif getgenv().enabled1 == false then
            breh1:Disconnect()
        end
    end)
end)

st:CreateLabel("~~Auto Sell")

st:CreateDropdown("Items list", itemsellTable, 1, itemsellTable[1], function(selected)
    if selected == "T1" then
        getgenv().tiersell = "I"
    elseif selected == "T2" then
        getgenv().tiersell = "II"
    elseif selected == "T3" then
        getgenv().tiersell = "III"
    elseif selected == "T4" then
        getgenv().tiersell = "IV"
    elseif selected == "T5" then
        getgenv().tiersell = "V"
    end
end)

st:CreateDropdown("Rarity list", rarityTable, 1, raritysellTable[1], function(selected)
    getgenv().raritysell = selected

    if selected == "Common" then
        getgenv().raritysell = 1
    elseif selected == "Uncommon" then
        getgenv().raritysell = 2
    elseif selected == "Rare" then
        getgenv().raritysell = 3
    elseif selected == "Epic" then
        getgenv().raritysell = 4
    elseif selected == "Legendary" then
        getgenv().raritysell = 5
    elseif selected == "Mythic" then
        getgenv().raritysell = 6
    end
end)

st:CreateToggle("Sell", function(bool)
    getgenv().sell = bool

    breh1 = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().sell == true then
            for i,v in pairs(plr.PlayerGui.ScreenGui.Inventory.Slots:GetDescendants()) do
                if v.Name == "Item" then
                    if getgenv().tiersell == "All Tier" then
                        if v:GetAttribute("Rarity") == getgenv().raritysell then
                            game:GetService("ReplicatedStorage").Knit.Services.ShopSellService.RF.SellingItems:InvokeServer({[v:GetAttribute("ItemID")] = v.Parent.Name})
                        end
                    elseif getgenv().tiersell ~= "All Tier" then 
                        if v.Button.Tier.TextLabel.Text == getgenv().tiersell then
                            if v:GetAttribute("Rarity") == getgenv().raritysell then
                                game:GetService("ReplicatedStorage").Knit.Services.ShopSellService.RF.SellingItems:InvokeServer({[v:GetAttribute("ItemID")] = v.Parent.Name})
                            end
                        end
                    end
                end
            end            
        else
            breh1:Disconnect()
        end
    end)
end)

st:CreateLabel("~~Teleports")

st:CreateLabel("~City~")

st:CreateButton("Mystery Shop", function()
    plr.Character.HumanoidRootPart.CFrame = CFrame.new(343, 4, -110)
end)

st:CreateButton("Shop", function()
    plr.Character.HumanoidRootPart.CFrame = CFrame.new(277, 4, -0)
end)

st:CreateButton("Daily Reward", function()
    plr.Character.HumanoidRootPart.CFrame = CFrame.new(338, 4, 5)
end)

st:CreateButton("Bank", function()
    plr.Character.HumanoidRootPart.CFrame = CFrame.new(274, 4, 131)
end)

st:CreateLabel("~Area~")

tplist = st:CreateDropdown("Area List", areatpTable, 1, areatpTable[1], function(selected)
    getgenv().areatp = selected

    if selected then
        pesan("Teleport Notification!", "Make sure the area you choose is open otherwise you will be banned", 2.5)
    end
end)

st:CreateButton("Teleport", function()
    for i,v in pairs(game:GetService("Workspace").RegionsAssets[getgenv().areatp].PlayerSpawner:GetChildren()) do
        if v.ClassName == "SpawnLocation" then
            plr.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,3,0)
        end
    end
end)


-- Misc Section
sc:CreateLabel( "~~Server")

sc:CreateButton("Rejoin", function()
    game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, plr)
end)

sc:CreateButton("Server Hop", function()
    shop()
end)


sc:CreateLabel("~~Character")

sc:CreateSlider("Walk Speed", 19, 125, 16, 0, function(s)
    getgenv().ws = s
end)

sc:CreateSlider("Jump Power", 50, 125, 50, 0, function(s)
    getgenv().jp = s
end)

sc:CreateToggle("Enabled", function(bool)
    getgenv().wsjp =  bool

    local beat2

    beat2 = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().wsjp == true then
            plr.Character.Humanoid.WalkSpeed = getgenv().ws
            plr.Character.Humanoid.JumpPower = getgenv().jp
        else
            plr.Character.Humanoid.WalkSpeed = 19
            plr.Character.Humanoid.JumpPower = 50
            beat2:Disconnect()  
        end
    end)
end)

sc:CreateLabel("~~Admin Gui")

sc:CreateButton("Infinite Yield", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()  
end)

sc:CreateLabel("~~UI Settings")

sc:CreateKeybind("Toggle Ui", Enum.KeyCode.RightAlt, false, false, function()
    local nx = nil
            
    if getgenv().toggleui then
        getgenv().toggleui = false
        TweenService:Create(nameGui().Main, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 450, 0, 0)}):Play()
        TweenService:Create(nameGui().Main.Border, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()    
    else
        getgenv().toggleui = true
        TweenService:Create(nameGui().Main, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 450, 0, 250)}):Play()
        TweenService:Create(nameGui().Main.Border, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
    end
end)

sc:CreateButton("Destroy UI", function()
    for i,v in pairs(game.CoreGui:GetDescendants()) do
        if v.Name == "UITabs" and v.Parent.Name == "Main" then
            v.Parent.Parent:Destroy()
        end
    end
end)

credits:CreateLabel("Made By : Ikky#8337")
credits:CreateLabel("Tester : Unknown:))")

pesan(gameName, "This Script Made By Ikky#8337\n".."~"..plr.DisplayName.."~ Thx For Using My Script.", 10)
pesan("Important Notification!", "Make sure the area you choose is open otherwise you will be banned", 25)
pesan("Notification!", "Anti Afk Activated\nIf you play in ps, you must visit area you choose to spawn the mobs!", 15)
