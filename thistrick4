-- Variable
local TweenService = game:GetService("TweenService")
local plr = game:GetService("Players").LocalPlayer
local reps = game:GetService("ReplicatedStorage")
local wrk = game:GetService("Workspace")
local gameName = "⚔️MeloBlox RPG"
local moblist;
local tplist;
local tpbeat;
local beat;
local a1beat;
local a2beat;
local a3beat;
local aunk;
local aunp;
local unx
local charIDR;
local charID
local idk


-- Global
getgenv().area = nil
getgenv().areatp = nil
getgenv().itemlist = nil
getgenv().rarity = nil
getgenv().modeloot = nil
getgenv().tiersell = nil
getgenv().raritysell = nil
getgenv().stat = nil
getgenv().mobname = nil
getgenv().ws = nil
getgenv().jp = nil
getgenv().distance = nil
getgenv().mode = -90


-- Table
local areaTable = {"Tutorial", "SunnyForest", "DenseForest", "ToadstoolGorge", "BullfrogMarsh", "AridDesert"}
local mobTable = {}
local itemTable = {"All Tier" ,"Copper", "Egg", "T1", "T2", "T3", "T4", "T5"}
local rarityTable = {"All Rarity", "Common", "Uncommon", "Rare", "Epic", "Legendary", "Mythic"}
local modelootTable = {"Bring Item", "Tp To Item"}
local statsTable = {"Strength", "Dexterity", "Vitality", "Intelligence"}
local itemsellTable = {"T1", "T2", "T3", "T4", "T5"}
local raritysellTable = {"All Rarity", "Common", "Uncommon", "Rare", "Epic", "Legendary", "Mythic"}
local areatpTable = {"Tutorial","SunnyForest", "DenseForest", "ToadstoolGorge", "BullfrogMarsh", "AridDesert"}

-- Function


function backtosafeTp()
    if getgenv().area  ~= nil then
        local dist = math.huge
        for i,v in pairs(game.Workspace.RegionsAssets[getgenv().area].PlayerSpawner:GetChildren()) do
            if v.ClassName == "SpawnLocation" then
                local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                if magnitude < dist then
                    dist = magnitude
                    plr.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,3,0)
                end 
            end
        end
    end
end

function nearestItem()
    local dist = 250
    local dekat = nil   
    for i,v in pairs(wrk.RunTime.GroundLoot:GetChildren()) do
        if plr.PlayerGui.LootLabel:FindFirstChild(v:GetAttribute("ItemID")) then
            if plr.PlayerGui.LootLabel[v:GetAttribute("ItemID")].Input.Visible == true then
                if getgenv().itemlist == "All Tier" then
                    if getgenv().rarity == "All Rarity" then
                        local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                        if magnitude < dist then
                            dist = magnitude
                            dekat = v
                        end
                    elseif getgenv().rarity ~= "All Rarity" then
                        if v:GetAttribute("Rarity") == getgenv().rarity then
                            local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                            if magnitude < dist then        
                                dist = magnitude
                                dekat = v
                            end
                        end
                    end
                elseif getgenv().itemlist ~= "All Tier" and getgenv().itemlist ~= "Copper" and getgenv().itemlist ~= "Egg" then
                    if string.find(v.Name, getgenv().itemlist) or string.find(v.Name, "Gold") or string.find(v.Name, "Egg") then
                        if getgenv().rarity == "All Rarity" then
                            local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                            if magnitude < dist then        
                                dist = magnitude
                                dekat = v
                            end
                        elseif getgenv().rarity ~= "All Rarity" then
                            if v:GetAttribute("Rarity") == getgenv().rarity then
                                local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                                if magnitude < dist then        
                                    dist = magnitude
                                    dekat = v
                                end
                            end
                        end
                    end
                elseif getgenv().itemlist == "Copper" and getgenv().itemlist ~= "Egg" then
                    if string.find(v.Name, "Gold") then
                        local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                        if magnitude < dist then        
                            dist = magnitude
                            dekat = v
                        end
                    end
                elseif getgenv().itemlist == "Egg" and getgenv().itemlist ~= "Copper" then
                    if string.find(v.Name, "Egg") then
                        if getgenv().rarity == "All Rarity" then
                            local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                            if magnitude < dist then        
                                dist = magnitude
                                dekat = v
                            end
                        elseif getgenv().rarity ~= "All Rarity" then
                            if v:GetAttribute("Rarity") == getgenv().rarity then
                                local magnitude = (plr.Character.HumanoidRootPart.Position - v.Position).magnitude
                                if magnitude < dist then        
                                    dist = magnitude
                                    dekat = v
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    return dekat
end

function shop()
    local x = {}
    for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
        if type(v) == "table" and v.maxPlayers > v.playing and v.id ~= game.JobId then
           x[#x + 1] = v.id
        end
    end
    if #x > 0 then
       game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
       wait(5)
       game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
	else
        print("....")
	end
end


game:GetService("RunService").Heartbeat:Connect(function()
    charIDR = require(plr.PlayerScripts.FrameworkClient.Controllers.GameLogic.GameLoopController)
    charID = charIDR:GetCharInfo().ID
end)

repeat wait() until game:IsLoaded() 
    plr.Idled:connect(function()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

-- Vape ui library [Ikky = Added Refresh Dropdown + Precise Slider]

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Rykyy/brothistrick/main/vapeuix.txt"))()


local window = library:CreateWindow(gameName, Color3.fromRGB(123, 7, 144))

local credits = window:CreateTab("Credits")
local fl = window:CreateTab("Farm & Loot")
local st = window:CreateTab("Stat & Sell & Teleport")
local sc = window:CreateTab("Server & Player")

-- Credits Tab

credits:CreateLabel("Made By : Ikky#8337")
credits:CreateLabel("Tester : Idk LOL")

credits:CreateLabel("------------------------------[Gui]------------------------------")

credits:CreateLabel("~~[Press Right-Ctrl To Hide Gui]~~")

credits:CreateButton("Destroy Gui", function()
    game.CoreGui[library.Name]:Destroy()
end)  

-- Farm & Loot Tab

fl:CreateLabel("------------------------------[Mob]------------------------------")

fl:CreateDropdown("Area List", areaTable, false, function(selected)
    getgenv().area = selected

    for _,v2 in pairs(mobTable) do table.remove(mobTable, _) end 
    for _,v2 in pairs(mobTable) do table.remove(mobTable, _) end

    for _,v in pairs(wrk.RunTime[selected].Creatures:GetChildren()) do
        if v:FindFirstChild("HumanoidRootPart") then
            insert = true
            for _,v2 in pairs(mobTable) do if v2 == tostring(v.HumanoidRootPart.HealthGUI.HealthBar.CreatureName.Text) then insert = false end end
            if insert then table.insert(mobTable, tostring(v.HumanoidRootPart.HealthGUI.HealthBar.CreatureName.Text)) end
        end 
    end

    moblist:Refresh(mobTable)
    library:Notification("Ikky Notification!", "Make sure the area you choose is open otherwise you will be banned", "Okay Ikky!")
end)

moblist = fl:CreateDropdown("Mob List", mobTable, false, function(selected)
    getgenv().mobname = selected
end)


fl:CreateSlider("Distance", -15, 15, 0.1, 0, function(s)
    getgenv().distance = s

    if getgenv().distance >= 0  then
        getgenv().mode = -90
    elseif getgenv().distance <= -1 then
        getgenv().mode = 90
    end
end)

fl:CreateLabel("------------------------------[Skill]------------------------------")

fl:CreateToggle("Slot 1", nil, function(bool)
    a1 = bool

    a1beat =  game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().enabled == true and a1 == true then                                              
            reps.Knit.Services.ActionBarService.RE.InputReceived:FireServer("Action1","Down")
        elseif getgenv().enabled == false and a1 == false then
            a1beat:Disconnect()
        end
    end)
end)

fl:CreateToggle("Slot 2", nil, function(bool)
    a2 = bool

    a2beat =  game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().enabled == true and a2 == true then
            reps.Knit.Services.ActionBarService.RE.InputReceived:FireServer("Action2","Down")
        elseif getgenv().enabled == false and a2 == false then
            a2beat:Disconnect()    
        end
    end)
end)


fl:CreateToggle("Slot 3", nil, function(bool)
    a3 = bool

    a3beat = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().enabled == true and a3 == true then
            reps.Knit.Services.ActionBarService.RE.InputReceived:FireServer("Action3","Down")
        elseif getgenv().enabled == false and a3 == false then
            a3beat:Disconnect()
        end
    end)
end)


fl:CreateButton("Get All Weapon Skill", function()
    for i,v in pairs(plr.Character:GetChildren()) do
        if string.find(v.Name, "Axe") then
            local args = {
                [1] = "Action1",
                [2] = "BasicAttack"
            }
                
            reps.Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action2",
                [2] = "FireSlash"
            }
                
            reps.Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action3",
                [2] = "GroundSlam"
            }
                
            reps.Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
        elseif string.find(v.Name, "Sword") and not string.find(v.Name, "Shield")  then
            local args = {
                [1] = "Action1",
                [2] = "BasicAttack"
            }
                
            reps.Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action2",
                [2] = "SwiftStrike"
            }
                
            reps.Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action3",
                [2] = "Whirlwind"
            }
                
            reps.Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
        elseif string.find(v.Name, "Shield") then
            local args = {
                [1] = "Action1",
                [2] = "BasicAttack"
            }
                
            reps.Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action2",
                [2] = "BombShield"
            }
                
            reps.Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action3",
                [2] = "HardSkin"
            }
                
            reps.Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
        end
    end
end)

fl:CreateLabel("------------------------------[Farm]------------------------------")

fl:CreateToggle("Farm", nil, function(bool)
    getgenv().enabled = bool

    if getgenv().enabled == true then
        if charID ~= nil and plr.PlayerGui.DeathScreen.Enabled == true then
            reps.Knit.Services.CharacterHealthService.RF.Revive:InvokeServer(charID)
        end
    else
        if not plr.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
            aunk = Instance.new("BodyVelocity", plr.Character.HumanoidRootPart)
            aunk.Velocity = Vector3.new(0, 0, 0)
            aunk.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        end
        aunk:Destroy()
        backtosafeTp()
    end

    aunp = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().enabled == true then
            for i, v in pairs(plr.Character:GetDescendants()) do
                if v:IsA("BasePart") and v.CanCollide == true then
                    v.CanCollide = false
                    plr.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
                end
            end
        elseif getgenv().enabled == false then
            aunp:Disconnect()
        end
    end)

    bruh = plr.PlayerGui.DeathScreen.Changed:Connect(function(v)
        if getgenv().enabled == true and charID ~= nil and plr.PlayerGui.DeathScreen.Enabled == true then
            reps.Knit.Services.CharacterHealthService.RF.Revive:InvokeServer(charID)
        elseif getgenv().enabled == false then
            bruh:Disconnect()
        end
    end)

    beat = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().sell == true then
            for i,v in pairs(plr.PlayerGui.ScreenGui.Inventory.Slots:GetDescendants()) do
                if v.Name == "Item" then
                    if v.Button.Tier.TextLabel.Text == getgenv().tiersell then
                        if getgenv().rarity == "All Rarity" then
                            plr.Character.HumanoidRootPart.CFrame = CFrame.new(431, 13, -138)
                            reps.Knit.Services.ShopSellService.RF.SellingItems:InvokeServer({[v:GetAttribute("ItemID")] = v.Parent.Name})
                        elseif getgenv().rarity ~= "All Rarity" then
                            if v:GetAttribute("Rarity") == getgenv().raritysell then
                                plr.Character.HumanoidRootPart.CFrame = CFrame.new(431, 13, -138)
                                reps.Knit.Services.ShopSellService.RF.SellingItems:InvokeServer({[v:GetAttribute("ItemID")] = v.Parent.Name})
                            end
                        end
                    end
                end
            end
        end   
        if getgenv().enabled == true then
            if getgenv().area ~= nil then
                if getgenv().loot == false or getgenv().loot == nil or getgenv().sell == false or getgenv().loot == true and getgenv().modeloot == "Bring Item" then
                    if plr.PlayerGui.DeathScreen.Enabled == true and charID ~= nil then
                        print("Revive!!!!!!!")
                    elseif plr.PlayerGui.DeathScreen.Enabled == false and charID ~= nil then
                        for i,v in next, wrk.RunTime[getgenv().area].Creatures:GetChildren() do
                            if v:FindFirstChild("HumanoidRootPart") then
                                if v.HumanoidRootPart.HealthGUI.HealthBar.CreatureName.Text == getgenv().mobname and getgenv().enabled == true then
                                    repeat
                                        if v:FindFirstChild("HumanoidRootPart") then
                                            plr.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,getgenv().distance,0) * CFrame.Angles(math.rad(getgenv().mode),0,0)
                                        end
                                    wait()
                                    until getgenv().enabled == false or not v:FindFirstChild("HumanoidRootPart")
                                end
                            end
                        end
                    end
                elseif getgenv().sell == true or getgenv().loot == true and nearestItem() == nil and getgenv().modeloot == "Tp To Item" then
                    if plr.PlayerGui.DeathScreen.Enabled == true and charID ~= nil then
                        print("Revive!!!!!!!")
                    elseif plr.PlayerGui.DeathScreen.Enabled == false and charID ~= nil then
                        for i,v in next, wrk.RunTime[getgenv().area].Creatures:GetChildren() do
                            if v:FindFirstChild("HumanoidRootPart") then
                                if v.HumanoidRootPart.HealthGUI.HealthBar.CreatureName.Text == getgenv().mobname and getgenv().enabled == true then
                                    repeat
                                        if v:FindFirstChild("HumanoidRootPart") then
                                            plr.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,getgenv().distance,0) * CFrame.Angles(math.rad(getgenv().mode),0,0)
                                        end
                                    wait()
                                    until getgenv().enabled == false or not v:FindFirstChild("HumanoidRootPart")
                                end
                            end
                        end
                    end
                end
            end
        elseif getgenv().enabled == false and getgenv().sell == false then
            beat:Disconnect()
        end    
    end)  
end)

fl:CreateLabel("------------------------------[Loot]------------------------------")

fl:CreateDropdown("Items list", itemTable, false, function(selected)
    getgenv().itemlist = selected
end)

fl:CreateDropdown("Rarity list", rarityTable, false, function(selected)
    getgenv().rarity = selected

    if selected == "Common" then
        getgenv().rarity = 1
    elseif selected == "Uncommon" then
        getgenv().rarity = 2
    elseif selected == "Rare" then
        getgenv().rarity = 3
    elseif selected == "Epic" then
        getgenv().rarity = 4
    elseif selected == "Legendary" then
        getgenv().rarity = 5
    elseif selected == "Mythic" then
        getgenv().rarity = 6
    end
end)

fl:CreateDropdown("Mode List", modelootTable, false, function(selected)
    getgenv().modeloot = selected
end)


fl:CreateToggle("Loot", nil, function(bool)
    getgenv().loot = bool
    local lootbeat;

    unx = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().loot == true then
            for i, v in pairs(plr.Character:GetDescendants()) do
                if v:IsA("BasePart") and v.CanCollide == true then
                    v.CanCollide = false
                    plr.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
                end
            end
        elseif getgenv().loot == false then
            unx:Disconnect()
        end
    end)

    lootbeat = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().loot == true and nearestItem() ~= nil and plr.Character ~= nil then
            if getgenv().modeloot == "Bring Item" then
                nearestItem().CFrame = plr.Character.HumanoidRootPart.CFrame
                reps.Knit.Services.GroundItemService.RF.PickUpItem:InvokeServer(nearestItem():GetAttribute("ItemID"))
            elseif getgenv().modeloot == "Tp To Item" then
                plr.Character.HumanoidRootPart.CFrame = nearestItem().CFrame * CFrame.new(0,-5,0) * CFrame.Angles(math.rad(90),0,0)
                reps.Knit.Services.GroundItemService.RF.PickUpItem:InvokeServer(nearestItem():GetAttribute("ItemID"))
            end
        end
    end)

    if getgenv().loot == false and getgenv().enabled == false then
        backtosafeTp()
    end
end)

-- Stat & Sell & Teleport Tab

st:CreateLabel("------------------------------[Stat]------------------------------")

st:CreateDropdown("Stat List", statsTable, false, function(selected)
    getgenv().stat = selected
end)

st:CreateToggle("Add Stat", nil, function(bool)
    getgenv().enabled1 = bool

    breh1 = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().enabled1 == true then
            reps.Knit.Services.PrimaryStatsService.RF.AttributeStatPoint:InvokeServer(getgenv().stat)
        elseif getgenv().enabled1 == false then
            breh1:Disconnect()
        end
    end)
end)

st:CreateLabel("------------------------------[Sell]------------------------------")


st:CreateDropdown("Items list", itemsellTable, false, function(selected)
    if selected == "T1" then
        getgenv().tiersell = "I"
    elseif selected == "T2" then
        getgenv().tiersell = "II"
    elseif selected == "T3" then
        getgenv().tiersell = "III"
    elseif selected == "T4" then
        getgenv().tiersell = "IV"
    elseif selected == "T5" then
        getgenv().tiersell = "V"
    end
end)

st:CreateDropdown("Rarity list", raritysellTable, false, function(selected)
    getgenv().raritysell = selected

    if selected == "Common" then
        getgenv().raritysell = 1
    elseif selected == "Uncommon" then
        getgenv().raritysell = 2
    elseif selected == "Rare" then
        getgenv().raritysell = 3
    elseif selected == "Epic" then
        getgenv().raritysell = 4
    elseif selected == "Legendary" then
        getgenv().raritysell = 5
    elseif selected == "Mythic" then
        getgenv().raritysell = 6
    end
end)

st:CreateToggle("Sell", nil, function(bool)
    getgenv().sell = bool
end)

st:CreateLabel("------------------------------[Tp]------------------------------")

st:CreateLabel("                              ~[City]~")

st:CreateButton("Mystery Shop", function()
    plr.Character.HumanoidRootPart.CFrame = CFrame.new(343, 4, -110)
end)

st:CreateButton("Shop", function()
    plr.Character.HumanoidRootPart.CFrame = CFrame.new(277, 4, -0)
end)

st:CreateButton("Daily Reward", function()
    plr.Character.HumanoidRootPart.CFrame = CFrame.new(338, 4, 5)
end)

st:CreateButton("Bank", function()
    plr.Character.HumanoidRootPart.CFrame = CFrame.new(274, 4, 131)
end)

st:CreateLabel("                              ~[Area]~")

tplist = st:CreateDropdown("Area List", areatpTable, false, function(selected)
    getgenv().areatp = selected

    if selected then
        library:Notification("Ikky Notification!", "Make sure the area you choose is open otherwise you will be banned", "Okay Ikky!!!")
    end
end)

st:CreateButton("Teleport", function()
    for i,v in pairs(wrk.RegionsAssets[getgenv().areatp].PlayerSpawner:GetChildren()) do
        if v.ClassName == "SpawnLocation" then
            plr.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,3,0)
        end
    end
end)


-- Server & Character Tab

sc:CreateLabel("------------------------------[Server]------------------------------")

sc:CreateButton("Rejoin", function()
    game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, plr)
end)

sc:CreateButton("Server Hop", function()
    shop()
end)

sc:CreateLabel("------------------------------[Player]------------------------------")

sc:CreateSlider("Walk Speed", 19, 125, 1, 19, function(s)
    getgenv().ws = s
end)

sc:CreateSlider("Jump Power", 50, 125, 1, 50, function(s)
    getgenv().jp = s
end)

sc:CreateToggle("Increase", nil, function(bool)
    getgenv().wsjp =  bool

    local beat2

    beat2 = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().wsjp == true then
            plr.Character.Humanoid.WalkSpeed = getgenv().ws
            plr.Character.Humanoid.JumpPower = getgenv().jp
        else
            plr.Character.Humanoid.WalkSpeed = 19
            plr.Character.Humanoid.JumpPower = 50
            beat2:Disconnect()  
        end
    end)
end)
