-- Variable
local plyr = game.Players.LocalPlayer
local gameName = "⚔️MeloBlox"
local moblist;
local tplist;
local beat;
local a1beat;
local a2beat;
local a3beat;
local aunk;

-- Global
getgenv().area = "Tutorial"
getgenv().areatp = "SunnyForest"
getgenv().stat = "Strength"
getgenv().mobname = "Blob"
getgenv().ws = 19
getgenv().jp = 50
getgenv().distance = 7.7
getgenv().range = "Nearest"


-- Table
local areaTable = {"Tutorial", "SunnyForest", "DenseForest", "ToadstoolGorge", "BullfrogMarsh", "AridDesert"}
local mobTable = {}
local statsTable = {"Strength", "Dexterity", "Vitality", "Intelligence"}
local areatpTable = {"SunnyForest", "DenseForest", "ToadstoolGorge", "BullfrogMarsh", "AridDesert"}

for _,v in pairs(game:GetService("Workspace").RunTime[getgenv().area]:GetDescendants()) do
    if v.Name == "CreatureName" then
        insert = true
        for _,v2 in pairs(mobTable) do if v2 == tostring(v.Text) then insert = false end end
        if insert then table.insert(mobTable, tostring(v.Text)) end
    end
end

-- Function
local function moveto(obj)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = obj

    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        aunk = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        aunk.Velocity = Vector3.new(0, 0, 0)
        aunk.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    end
end

local function nearestItem()
    local dist = math.huge
    local dekat = nil
    for i,v in pairs(game:GetService("Workspace").RunTime.GroundLoot:GetChildren()) do
        if v.ClassName == "MeshPart" or v.ClassName == "Part" then
            local magnitude = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
            if magnitude < dist then
                dist = magnitude
                dekat = v.Name
            end
        end
    end
    return dekat
end

local function shop()
    local x = {}
    for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
        if type(v) == "table" and v.maxPlayers > v.playing and v.id ~= game.JobId then
           x[#x + 1] = v.id
        end
    end
    if #x > 0 then
       game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
       wait(5)
       game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
	else
        print("....")
	end
end

local function pesan(title, text, time)
    local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
    local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

    Notification:Notify(
        {Title = title, Description = text},
        {OutlineColor = Color3.fromRGB(255, 84, 84),Time = time, Type = "image"},
        {Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84)}
    )
end

local function nearestMob()
    local dist = math.huge
    local dekat = nil
    for i,v in pairs(game:GetService("Workspace").RunTime[getgenv().area].Creatures:GetChildren()) do
        if v:FindFirstChild("HumanoidRootPart") then
            local magnitude = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if magnitude < dist then
                dist = magnitude
                dekat = v
            end
        end
    end
    return dekat
end


game:GetService("RunService").Heartbeat:Connect(function()
    if game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("PlayerInfo") then
        game.Players.LocalPlayer.Character.HumanoidRootPart.PlayerInfo:Destroy()
    end
end)  

game:GetService("RunService").Heartbeat:Connect(function()
    if getgenv().enabled == false and game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        aunk:Destroy()
    end
end)

repeat wait() until game:IsLoaded() 
    game:GetService("Players").LocalPlayer.Idled:connect(function()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)


-- Library
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Rykyy/roblox/scripts/CoaUix.lua"))()

local window = library:CreateTab(gameName)
local misc = library:CreateTab("Misc")

local autofarm = window:CreateSection("Auto Farm")
local autostats = window:CreateSection("Auto Stats")
local teleports = misc:CreateSection("Teleports")
local sc = misc:CreateSection("Server & Character")

pesan(gameName, "This Script Made By Rykyy#8337\n".."~"..plyr.DisplayName.."~ Thx For Using My Script.", 10)
pesan("Notification!", "Hide Name & Anti Afk Activated\n[Keep Activated Even though you are dead]", 2.5)

autofarm:CreateLabel("~~Mob Settings")

autofarm:CreateDropdown("Areas List", areaTable, 1, function(selected)
    getgenv().area = selected

    for _,v2 in pairs(mobTable) do table.remove(mobTable, _) end 
    for _,v2 in pairs(mobTable) do table.remove(mobTable, _) end

    for _,v in pairs(game:GetService("Workspace").RunTime[selected].Creatures:GetChildren()) do
        if v:FindFirstChild("HumanoidRootPart") then
            insert = true
            for _,v2 in pairs(mobTable) do if v2 == tostring(v.HumanoidRootPart.HealthGUI.HealthBar.CreatureName.Text) then insert = false end end
            if insert then table.insert(mobTable, tostring(v.HumanoidRootPart.HealthGUI.HealthBar.CreatureName.Text)) end
        end 
    end
    moblist:Refresh(mobTable, 1, "AreaHasBeenChanged")
    pesan("Mob Settings Notification!", "Make sure the area you choose is open otherwise you will be banned", 2.5)
end)

moblist = autofarm:CreateDropdown("Mob List", mobTable, 1, function(selected)
    getgenv().mobname = selected
    print(selected)
end)

autofarm:CreateDropdown("Ranges List", {"Random", "Nearest"}, 1, function(selected)
    getgenv().range = selected
end)

autofarm:CreateSlider("Distance", 0, 10, getgenv().distance, 0.999, function(s)
    getgenv().distance = s
end)

autofarm:CreateLabel("~~Attack Action Settings")

autofarm:CreateToggle("Slot 1", function(bool)
    a1 = bool

    a1beat = game:GetService("RunService").Stepped:Connect(function()
        if getgenv().enabled == true and a1 == true then
            local args = {
                [1] = "Action1",
                [2] = "Down"
            }
                                                            
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.InputReceived:FireServer(unpack(args))
        elseif getgenv().enabled == false and a1 == false then
            a1beat:Disconnect()
        end
    end)
end)

autofarm:CreateToggle("Slot 2", function(bool)
    a2 = bool

    a2beat = game:GetService("RunService").Stepped:Connect(function()
        if getgenv().enabled == true and a2 == true then
            local args = {
                [1] = "Action2",
                [2] = "Down"
            }
                                                            
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.InputReceived:FireServer(unpack(args))
        elseif getgenv().enabled == false and a2 == false then
            a2beat:Disconnect()    
        end
    end)
end)


autofarm:CreateToggle("Slot 3", function(bool)
    a3 = bool

    a3beat = game:GetService("RunService").Stepped:Connect(function()
        if getgenv().enabled == true and a3 == true then
            local args = {
                [1] = "Action3",
                [2] = "Down"
            }
                                                            
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.InputReceived:FireServer(unpack(args))
        elseif getgenv().enabled == false and a3 == false then
            a3beat:Disconnect()
        end
    end)
end)


autofarm:CreateButton("Get All Weapon Skill", function()
    for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if string.find(v.Name, "Axe") then
            local args = {
                [1] = "Action1",
                [2] = "BasicAttack"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action2",
                [2] = "GroundSlam"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action3",
                [2] = "FireSlash"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
        elseif string.find(v.Name, "Sword") and not string.find(v.Name, "Shield")  then
            local args = {
                [1] = "Action1",
                [2] = "BasicAttack"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action2",
                [2] = "SwiftStrike"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action3",
                [2] = "Whirlwind"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
        elseif string.find(v.Name, "Shield") then
            local args = {
                [1] = "Action1",
                [2] = "BasicAttack"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action2",
                [2] = "BombShield"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
            local args = {
                [1] = "Action3",
                [2] = "HardSkin"
            }
                
            game:GetService("ReplicatedStorage").Knit.Services.ActionBarService.RE.SelectSkill:FireServer(unpack(args))
        end
    end
end)

autofarm:CreateLabel("~~Farm")

autofarm:CreateToggle("Enabled", function(bool)
    getgenv().enabled = bool

    
    beat = game:GetService("RunService").Heartbeat:Connect(function()
        pcall(function()
            if getgenv().enabled == true then
                if getgenv().range == "Nearest" then
                    if nearestMob().HumanoidRootPart.HealthGUI.HealthBar.CreatureName.Text == getgenv().mobname and getgenv().enabled == true then
                        repeat
                            if nearestMob():FindFirstChild("HumanoidRootPart") then
                                moveto(nearestMob().HumanoidRootPart.CFrame * CFrame.new(0,getgenv().distance,0) * CFrame.Angles(math.rad(-90),0,0))
                            end
                        wait()
                        until getgenv().enabled == false or not nearestMob():FindFirstChild("HumanoidRootPart")
                        if getgenv().enabled == false then
                            beat:Disconnect()
                        end
                    end
                elseif getgenv().range == "Random" then
                    for i,v in next, game:GetService("Workspace").RunTime[getgenv().area].Creatures:GetChildren() do
                        if v:FindFirstChild("HumanoidRootPart") then
                            if v.HumanoidRootPart.HealthGUI.HealthBar.CreatureName.Text == getgenv().mobname and getgenv().enabled == true then
                                repeat
                                    if v:FindFirstChild("HumanoidRootPart") then
                                        moveto(v.HumanoidRootPart.CFrame * CFrame.new(0,getgenv().distance,0) * CFrame.Angles(math.rad(-90),0,0))
                                    end
                                wait()
                                until getgenv().enabled == false or not v:FindFirstChild("HumanoidRootPart")
                                if getgenv().enabled == false then
                                    beat:Disconnect()
                                end
                            end
                        end
                    end
                end
            end
        end)
    end)       
end)

autofarm:CreateToggle("Auto Loot [Semi Work]", function(bool)
    getgenv().loot = bool

    while wait() do
        if getgenv().loot == true then
            local items = tostring(nearestItem())
            local itemsgsubed = items:gsub('[%a]-[%p][%a][%x][%p]','','1')
            wait()
            local TargetFunc = game:GetService("ReplicatedStorage").Knit.Services.GroundItemService.RF.PickUpItem;
            TargetFunc:InvokeServer(itemsgsubed);
        end
    end
end)

autostats:CreateDropdown("Stats List", statsTable, 1, function(selected)
    getgenv().stat = selected
end)

autostats:CreateToggle("Enabled", function(bool)
    getgenv().enabled1 = bool

    game:GetService("RunService").RenderStepped:Connect(function()
        if getgenv().enabled1 == true then
            local args = {
                [1] = getgenv().stat
            }
            
            game:GetService("ReplicatedStorage").Knit.Services.PrimaryStatsService.RF.AttributeStatPoint:InvokeServer(unpack(args))
        end
    end)
end)

teleports:CreateLabel("~~City")

teleports:CreateButton("Shop", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(277, 4, -0)
end)

teleports:CreateButton("Bank", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(274, 4, 131)
end)

teleports:CreateLabel("~~Areas")

tplist = teleports:CreateDropdown("Areas List", areatpTable, 1, function(selected)
    getgenv().areatp = selected

    if selected then
        pesan("Teleport Notification!", "Make sure the area you choose is open otherwise you will be banned", 2.5)
    end
end)

teleports:CreateButton( "Teleport", function()
    for i,v in pairs(game:GetService("Workspace").RegionsAssets[getgenv().areatp].Environment:GetChildren()) do
        if string.find(v.Name, "Zone") then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,3,0)
        end
    end
end)


-- Misc Section
sc:CreateLabel( "~~Server")

sc:CreateButton("Rejoin", function()
    game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
end)

sc:CreateButton( "Server Hop", function()
    shop()
end)


sc:CreateLabel("~~Character")

sc:CreateSlider("Walk Speed", 19, 125, 16, 0, function(s)
    getgenv().ws = s
end)

sc:CreateSlider("Jump Power", 50, 125, 50, 0, function(s)
    getgenv().jp = s
end)

sc:CreateToggle("Enabled", function(bool)
    getgenv().wsjp =  bool

    local beat2

    beat2 = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().wsjp == true then
            plyr.Character.Humanoid.WalkSpeed = getgenv().ws
            plyr.Character.Humanoid.JumpPower = getgenv().jp
        else
            plyr.Character.Humanoid.WalkSpeed = 19
            plyr.Character.Humanoid.JumpPower = 50
            beat2:Disconnect()  
        end
    end)
end)

sc:CreateLabel("~~Admin Gui")

sc:CreateButton("Infinite Yield", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()  
end)
